imprime_valor <- function (x) {print(x)}
a <- 33
b <- a + 22
b <- a + 22
source('C:/Users/Joel/Desktop/Computação/Introducao_a_Computacao_Aula02.R')
source('C:/Users/Joel/Desktop/Computação/Introducao_a_Computacao_Aula02.R')
imprime_valor <- function (x) {print(x)}
a <- 33
b <- a + 22
a
b
tabela <- read.csv("dados_exemplos.csv")
read.csv("dados_exemplos.csv")
read.csv("dados_exemplos.csv")
read.csv("dados_exemplos.csv")
a <- 33
b <- a + 22
print (tabela)
tabela <- read.csv("dados_exemplos.csv")
tabela <- read.csv("dados_exemplos.csv")
setwd("~/Computacao/Aula03")
a <- as.integer(readline("Digiteo primeiro número"))
a <- as.integer(readline("Digiteo primeiro número: "))
b <- as.integer(readline("Digite o segundo número: "))
c <- as.integer(readline("Digite o terceiro numero: "))
media <- (a + b + c) / 3
print(media)
cat("Média dos números: ", media)
diretorio <- getwd()
setwd(diretorio)
print(diretorio)
dados2 <- read.csv("alunoosnotas3.csv", header = TRUE, sep = ",", fill = TRUE)
dados2 <- read.csv("alunosnotas3.csv", header = TRUE, sep = ",", fill = TRUE)
print(dados2) #preenche com NA o que está em branco
write.csv(dados2, "nova.plan.csv")
temp <- read.csv("nova.plan.csv")
print (temp)
write.csv(dados2, "nova.plan.csv", row.names = FALSE)
temp <- read.csv("nova.plan2.csv")
print(temp)
print(temp)
temp <- read.csv("nova.plan.csv")
print(temp)
write.csv(dados2, "nova.plan.csv", row.names = FALSE)
temp <- read.csv("nova.plan.csv")
print(temp)
v1 <- c(1, 8, 5)
print(v1)
typeof(v1)
v2 <- c("casa", "das", "rosas")
print(v2)
typeof(v2)
v3 <- 1:15
print(v3)
v4 <- 4.8:12.6
print(v4)
v5 <- seq(1, 5, by+ 0.5)
v5 <- seq(1, 5, by= 0.5)
print(v5)
v6 <- seq(1, 5, length.out = 6)
print(v6)
print(v4)
v4[2]
v4[17]
print(v4)
v4[c(3,5,7)]
v4[3:7]
print(v4)
temp1 <- subset(v4, v4 <= 3)
print(temp1)
temp2 <- subset(v4, v4 > 7)
print(temp2)
print(v2)
v2[4] <- "Av Paulista"
print(v2)
#Modificar 1 elemento do vetor
print(v2)
v2[3] <- "Bruxas"
print(v2)
#Remover todos os elementos do vetor
print(v2)
v2 <- NULL
print(v2)
#Algumas operações sobre os vetores
print(v5)
lenght(v5)
length(v5)
min(v5)
min(v5) #menor vallor
#Algumas operações sobre vetores
print(v5)
max(v5)
mean(v5)
#Operações aritméticas
print(v1)
print(v3)
v1+v3
v1-v3
#Operações aritméticas
print(v1)
print(v3)
v1*v3
v1/v3
#Misturar tipos de daos
v7 <- c(1, TRUE, "casa")
print(v7)
typeof(v7)
#Criar listas - a partir de valores
1 <- list(1, 8, 5:7)
#Criar listas - a partir de valores
l <- list(1, 8, 5:7)
print(l)
#criando listas - a partir de elementos existentes
v1 <- c(1, 2, 6, 7:10)
v2 <- c(4,8,2)
l1 <- list(v1,v2)
print(l1)
#Criar listas com tipos diferentes
l1 <- list("qualquer coisa", c(1:3))
print(l1)
print(typeof(l1))
#Listas - elementos com nomes
l2 <- list("cel1" = v1, "cel2" = v2)
print(l2)
#após a definição
l1 <- list("qualquer coisa", c(1:3))
print(l1)
print(typeof(l1))
#Acesso aos elementos dda lista
print(l1[1])
print(l1[[1]])
print(l1$prim_elem)
names(l1) <- c("prim_elem", "seg_elem")
print(l1)
#Acesso aos elementos da lista
print(l1[1]) #acesso ao primeiro elemento [1]
print(l1[[1]]) #acesso ao valor do primeiro elemento [[1]]
print(l1$prim_elem)
#Acesso a elementos da lsita - subset
l2 <- list("qualquer coisa", c(1:3), c(20, 12, 5, 39))
print(subset(12,12 != "qualquer coisa"))
print(subset(12, 12 != "qualquer coisa"))
print(subset(12, 12 != "qualquer coisa"))
setwd("C:/Users/Joel/Desktop/Computacao/Lista03")
# script aula prÃ¡tica de vetores e listas
a0 <- 34L
a1 <- "a"
a2 <- 23.55
a3 <- c(45,11,28)
a4 <- seq(1,10,length.out = 6)
a5 <- list(10, 2.0, 5.4)
a6 <- list(Nome="eduardo", Notas = list(10, 2.0, 5.4))
a7 <- list(2, list("a",3))
#1.
print(a0)
print(typeof(a0))
print(a1)
print(typeof(a1))
#... complete
print(a2)
print(typeof(a2))
print(a3)
print(typeof(a3))
print(a5)
print(typeof(a5))#... complete
print(typeof(a5))
print(a6)
print(typeof(a6))
a0_temp <- as.double(a0)  # o mesmo valor de a0, mas armazenado como valor real
print(a0_temp)
print(typeof(a0_temp))
a0_temp <- as.vector(a0)  # o mesmo valor de a0, mas armazenado como caracter
print(a0_temp)
print(typeof(a0_temp))
a0_temp <- as.list(a0)  # o mesmo valor de a0, mas armazenado como caracter
print(a0_temp)
print(typeof(a0_temp))
a1_temp <- as.character(a1)
a1_temp <- as.integer(a1)
print(a1_temp)
print(is.integer(a3_temp))
print(typeof(a1_temp))
a1_temp <- as.integer(a1)  # o mesmo valor de a0, mas armazenado como caracter
print(a1_temp)
print(typeof(a1_temp))
a3_temp <- as.integer(a3)  # o mesmo valor de a0, mas armazenado como valor inteiro
print(a3_temp)
print(typeof(a3_temp))
print(is.integer(a3_temp))
a3_temp <- as.integer(a3)  # o mesmo valor de a0, mas armazenado como valor inteiro
print(a3_temp)
print(typeof(a3_temp))
a4_temp <- as.integer(a4)  # o mesmo valor de a0, mas armazenado como valor inteiro
print(a4_temp)
print(typeof(a4_temp))
a5_temp <- as.integer(a5)  # o mesmo valor de a0, mas armazenado como valor inteiro
print(a5_temp)
print(typeof(a5_temp))
a6_temp <- as.integer(a6)  # o mesmo valor de a0, mas armazenado como valor inteiro
print(a6_temp)
print(typeof(a6_temp))
a6_temp <- as.integer(a6)
a6_temp <- unlist(a6)
a6_temp <- as.integer(a6_temp)
print(a6_temp)
a6_temp <- unlist(a6)
print(a6_temp)
a6_temp <- as.integer(a6_temp)
print(a6_temp)
a7_temp <- as.integer(a7)
print(a7_temp)
a7_temp <- as.integer(unlist(a7))
print(a7_temp)
#3.
#a3
print(a3)
print(a3[1])
print(a3[2])
print(a3[3])
#a4
print(a4)
print(a4[1])
print(a4[2])
print(a4[3])
print(a4[4])
print(a4[5])
print(a4[6])
print(a3+a4)
#a6
print(a6)
print(a6[1])
print(a6[2])
print(a6$Nome)
print(a6[2])
print(a6$Notas)
notas <- a6$Notas
print(notas)
nota1a <- notas[1]
print(nota1a)
#a7
print(a7)
print(a7[1])
print(a7[2])
print(a3+a4)
print(a3)
print(a4)
print(a3 + a5)
#print(a3 + a5)
print(a3 + unlist(a5))
typeof(a5_temp)
print(a5_temp)
print(a3 + a5_temp)
typeof(a5_temp)
a5_temp <- as.double(a5)  # o mesmo valor de a0, mas armazenado como valor inteiro
typeof(a5_temp)
print(a3 + as.double(unlist(a5)))
print(a3 + as.integer(unlist(a5)))
v <- c(1.2, 3.5, 3.8)
print(v)
print(v + as.integer(a5_temp))
print(v + a5_temp)
print(as.integer(v + a5_temp))
notas <- a6$Notas
print(notas)
media <- (notas[1] + notas[2] + notas[3])/3
print(a6)
notas <- as.double(a6$Notas)
print(notas)
media <- (notas[1] + notas[2] + notas[3])/3
print(media)
notas <- as.integer(a6$Notas)
media <- (notas[1] + notas[2] + notas[3])/3
print(media)
print(notas)
