print(v1)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
#acesso a um elemento existente da matriz
print(m4)
m4[2,2] #linha 2, coluna 2
#acesso a um elemento inexistente da matriz
m4[4,1] #linha 4, coluna 1
#selecionar alguns elementos da matriz
print(m4)
m4[c(1,2), c(2,3)] #linha 1 e 2, coluna 2 e 3
print(m4)
m4[2:3, 1:3] #linha 2 a 3, colunas 1 a 3
m4[2,] #todos os elementos da linha 2
m4[,3] #todos os elementos da coluna 3
#modificar elementos, linhas e colunas da matriz
print(m4)
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
#adicionar e remover linha à matriz
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
print(m4)
m4<-m4[,-c(3)] #remove a coluna 3
print(m4)
#remove todos os elementos da matriz
m4<-NULL
print(m4)
v1<-c(1,2,6,7:10)
v2<-c(4,8,2)
l1<-list(v1,v2)
print(l1)
l2<-list(cel1= v1, cel2= v2)
print(l2)
#criar data-frames
dados_alunos<-data.frame(
Nome = c("Alexandre", "Allan", "Andre", "Bernardo"),
P1 = c(3.5, 5, 8, 9),
P2 = c(5.5, 6, 7.5, 5.5),
Sub = c(8.5, NA, NA, NA)
)
print(dados_alunos)
typeof(dados_alunos)
#acesso aos elementos dos data-frames
##um elemento
print(dados_alunos)
print(dados_alunos[1,2]) #linha 1, coluna 2
print(dados_alunos[1, "P1"]) #usando o nome da coluna
##colunas
print(dados_alunos)
print(dados_alunos["Nome"]) #coluna "Nome"
print(dados_alunos$Nome)
print(dados_alunos[1:3]) #da coluna 1 até a 3
##linhas
print(dados_alunos[1,]) #1a linha
print(dados_alunos[2:4,]) #da 2a até a 4a linha
#qual o tipo associado aos data-frames?
typeof(dados_alunos)
typeof(dados_alunos[1,])
typeof(dados_alunos$P1)
#criar um data-frame a partir de um existente
coluna_nome<-dados_alunos$Nome
coluna_P2<-dados_alunos$P2
print(coluna_nome)
print(coluna_P2)
dados_alunos1<-data.frame(dados_alunos$Nome,dados_alunos$P2) #colunas Nome e P2
print(dados_alunos1)
dados_alunos1<-dados_alunos[1:3]
print(dados_alunos1)
dados_alunos1<-dados_alunos[,1:3] #todas as linhas + colunas de 1 a 3
print(dados_alunos1)
dados_alunos2<-dados_alunos[c(1,3),]
print(dados_alunos2)
dados_alunos2<-dados_alunos[c(1,3), c(1:3)]
print(dados_alunos2)
#adicionar linhas a um data-frame
dados_alunos_novos<-data.frame(
Nome = c("Bruna", "Camila"),
P1 = c(9,6.5),
P2 = c(4.6, 7.3)
)
print(dados_alunos_novos)
print(dados_alunos2)
dados_alunos3<-rbind(dados_alunos2, dados_alunos_novos)
print(dados_alunos3)
print(dados_alunos2)
dados_alunos4<-rbind(dados_alunos_novos, dados_alunos2)
print(dados_alunos4)
#adicionar coluna ao data-frame
dados_colunaSub<-data.frame(Sub=c(6.5, NA, 5.0, NA))
dados_alunos3<-cbind(dados_alunos3, dados_colunaSub)
print(dados_alunos3)
dados_alunos3$Rec<- c(8.5, NA, 8.5, NA)
print(dados_alunos3)
#selação por valores
print(dados_alunos3)
alunos_p1<-subset(dados_alunos3, dados_alunos3$P1 >= 8)
print(alunos_p1)
alunos_p1<-subset(dados_alunos3, !(dados_alunos3$P1 >= 8))
print(alunos_p1)
alunos_p1<-subset(dados_alunos3, dados_alunos3$P1 >= 3 & dados_alunos3$P1 <= 7)
print(alunos_p1)
alunos_p1<-subset(dados_alunos3, dados_alunos3$P1 < 5 | dados_alunos3$P1 > 8) #alunos com nota menor que 5 ou (|) maior que 8 na P1
print(alunos_p1)
#remover linhas ou colunas
print(dados_alunos3)
dados_alunos3<-dados_alunos3[, -c(5)]
print(dados_alunos3)
dados_alunos3<-dados_alunos3[-c(4),]
print(dados_alunos3)
m1 <- matrix(c(1,30,10,5)) #uma única coluna
print(m1)
m2<- matrix(10:13,nrow = 2) # duas linhas - o núemro de colunas é calculado
print(m2)
v1<- c(1,6,3)
print(v1)
v2<- 1:5
print(v2)
vc<- c("azul", "vermelho", "amarelo")
print(vc)
print(v1)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
#acesso a um elemento existente da matriz
print(m4)
m4[2,2] #linha 2, coluna 2
#acesso a um elemento inexistente da matriz
m4[4,1] #linha 4, coluna 1
#selecionar alguns elementos da matriz
print(m4)
m4[c(1,2), c(2,3)] #linha 1 e 2, coluna 2 e 3
print(m4)
m4[2:3, 1:3] #linha 2 a 3, colunas 1 a 3
m4[2,] #todos os elementos da linha 2
m4[,3] #todos os elementos da coluna 3
#modificar elementos, linhas e colunas da matriz
print(m4)
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
#adicionar e remover linha à matriz
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
print(m4)
m4<-m4[,-c(3)] #remove a coluna 3
print(m4)
#remove todos os elementos da matriz
m4<-NULL
print(m4)
m1 <- matrix(c(1,30,10,5)) #uma única coluna
print(m1)
m2<- matrix(10:13,nrow = 2) # duas linhas - o núemro de colunas é calculado
print(m2)
v1<- c(1,6,3)
print(v1)
v2<- 1:5
print(v2)
vc<- c("azul", "vermelho", "amarelo")
print(vc)
print(v1)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
#acesso a um elemento existente da matriz
print(m4)
m4[2,2] #linha 2, coluna 2
#acesso a um elemento inexistente da matriz
m4[4,1] #linha 4, coluna 1
#selecionar alguns elementos da matriz
print(m4)
m4[c(1,2), c(2,3)] #linha 1 e 2, coluna 2 e 3
print(m4)
m4[2:3, 1:3] #linha 2 a 3, colunas 1 a 3
m4[2,] #todos os elementos da linha 2
m4[,3] #todos os elementos da coluna 3
#modificar elementos, linhas e colunas da matriz
print(m4)
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
#adicionar e remover linha à matriz
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50) #cbind() column bind
print(m4)
m4<-m4[,-c(3)] #remove a coluna 3
print(m4)
#remove todos os elementos da matriz
m4<-NULL
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
m1 <- matrix(c(1,30,10,5)) #uma única coluna
print(m1)
m2<- matrix(10:13,nrow = 2) # duas linhas - o núemro de colunas é calculado
print(m2)
v1<- c(1,6,3)
print(v1)
v2<- 1:5
print(v2)
vc<- c("azul", "vermelho", "amarelo")
print(vc)
print(v1)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
#acesso a um elemento existente da matriz
print(m4)
m4[2,2] #linha 2, coluna 2
#acesso a um elemento inexistente da matriz
m4[4,1] #linha 4, coluna 1
#selecionar alguns elementos da matriz
print(m4)
m4[c(1,2), c(2,3)] #linha 1 e 2, coluna 2 e 3
print(m4)
m4[2:3, 1:3] #linha 2 a 3, colunas 1 a 3
m4[2,] #todos os elementos da linha 2
m4[,3] #todos os elementos da coluna 3
#modificar elementos, linhas e colunas da matriz
print(m4)
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
#adicionar e remover linha à matriz
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
print(m4)
m4<-m4[,-c(3)] #remove a coluna 3
print(m4)
#remove todos os elementos da matriz
m4<-NULL
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
print(m4)
m4<-m4[,-c(3)] #remove a coluna 3
print(m4)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
m4[2,2] #linha 2, coluna 2
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
#adicionar e remover linha à matriz
print(m4)
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
#adicionar e remover linha à matriz
print(m4)
m4<-m4[,-c(4)] #remove a coluna 3
#adicionar e remover linha à matriz
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
m4<-m4[,-c(4)] #remove a coluna 3
print(m4)
m1 <- matrix(c(1,30,10,5)) #uma única coluna
print(m1)
m2<- matrix(10:13,nrow = 2) # duas linhas - o núemro de colunas é calculado
print(m2)
v1<- c(1,6,3)
print(v1)
v2<- 1:5
print(v2)
vc<- c("azul", "vermelho", "amarelo")
print(vc)
print(v1)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
#acesso a um elemento existente da matriz
print(m4)
m4[2,2] #linha 2, coluna 2
#acesso a um elemento inexistente da matriz
m4[4,1] #linha 4, coluna 1
#selecionar alguns elementos da matriz
print(m4)
m4[c(1,2), c(2,3)] #linha 1 e 2, coluna 2 e 3
print(m4)
m4[2:3, 1:3] #linha 2 a 3, colunas 1 a 3
m4[2,] #todos os elementos da linha 2
m4[,3] #todos os elementos da coluna 3
#modificar elementos, linhas e colunas da matriz
print(m4)
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
#adicionar e remover linha à matriz
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
#adicionar e remover linha à matriz
print(m4)
#adicionar e remover linha à matriz
print(m4)
m1 <- matrix(c(1,30,10,5)) #uma única coluna
print(m1)
m2<- matrix(10:13,nrow = 2) # duas linhas - o núemro de colunas é calculado
print(m2)
v1<- c(1,6,3)
print(v1)
v2<- 1:5
print(v2)
vc<- c("azul", "vermelho", "amarelo")
print(vc)
print(v1)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
#quando faltam valores na matriz começa a repetir valores iniciais
m4<- matrix(c(1:4, 8:10), nrow = 3)
print(m4)
m4[2,2] #linha 2, coluna 2
#acesso a um elemento inexistente da matriz
m4[4,1] #linha 4, coluna 1
#selecionar alguns elementos da matriz
print(m4)
m4[c(1,2), c(2,3)] #linha 1 e 2, coluna 2 e 3
print(m4)
m4[2:3, 1:3] #linha 2 a 3, colunas 1 a 3
m4[2,] #todos os elementos da linha 2
m4[,3] #todos os elementos da coluna 3
#modificar elementos, linhas e colunas da matriz
print(m4)
m4[2,3]<- 20 #elemento
print(m4)
m4[2,]<- c(20,6,7) #linha
print(m4)
m4[2,]<- c(30,60) #como falta o 3o elemento, não modifica
print(m4)
m4[,3]<- c(20,30,40) #coluna
print(m4)
#adicionar e remover linha à matriz
print(m4)
m4<-rbind(m4,c(20,30,40)) #rbind() row bind
print(m4)
#adicionar e remover coluna à matriz
m4<-cbind(m4,c(20,30,40,50)) #cbind() column bind
print(m4)
m4<-m4[-c(2),] #remove a linha 2
print(m4)
m4<-m4[,-c(3)] #remove a coluna 3
print(m4)
#remove todos os elementos da matriz
m4<-NULL
print(m4)
setwd("C:/Users/Joel/Desktop/Introducao a Computacao/Aula04")
v1 <- as.integer(seq(1,16,length.out = 8))
v2 <- as.integer(c(34,76,12,45,33))
v3 <- seq(1,8,by = 0.8)
#1.
print(v1)
print(v2)
print(v3)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
v1<- c(1,6,3)
print(v1)
v2<- 1:5
print(v2)
vc<- c("azul", "vermelho", "amarelo")
print(vc)
m3<- matrix(c(v1,4:8), ncol = 4) #quatro colunas - número de linhas calculado
print(m3)
v1 <- as.integer(seq(1,16,length.out = 8))
v2 <- as.integer(c(34,76,12,45,33))
v3 <- seq(1,8,by = 0.8)
print(v1)
print(v2)
print(v3)
#2.
# - matriz _m1_ com os valores do vetor _v1_ com uma Ãºnica coluna
m1<-matrix(v1, ncol = 1)
print(m1)
# - matriz _m2_ com os valores do vetor _v1_ com 2 linhas
m2<-matrix(v1, nrow = 2)
print(m2)
# - matriz _m3_ com os valores do vetor _v2_ com 3 colunas
m3<-matrix(v2, ncol = 3)
print(m3)
# - matriz _m4_ com os valores do vetor _v1 + v3_ com 4 linhas
m4<-matrix(c(v1+v3, 12:14), nrow = 4)
print(m4)
# 3.
# - colocar o valor _15_ na linha 2, coluna 3 da matriz _m2_. Imprimir a matriz depois.
m2[2,3]<-15
print(m2)
# - substituir a linha 2 da matriz _m2_ com os seguintes valores _c(18,20,22,24)_. Imprimir a matriz depois.
m2[2,]<-c(18,20,22,24)
print(m2)
# - substituir a coluna 3 da matriz _m4_ com os seguintes valores _c(14,4,44,24)_. Imprimir a matriz depois.
m4[,3]<-c(14,4,44,24)
print(m4)
#
# 4.
# - adicionar uma linha com os valores _c(14,55)_ ao final da matriz _m2_. Imprimir a matriz depois.
m2<-rbind(m2, c(14,55))
print(m2)
# - adicionar uma coluna com os valores _c(18,8,88,28)_ como 1a coluna da matriz _m4_. Imprimir a matriz depois.
m4<-cbind(m4, c(18,8,88,28))
print(m4)
#
# 5.
# - remover a primeira linha da matriz _m2_. Imprimir a matriz depois.
m2<-m2[-(1),]
print(m2)
# - remover a primeira e a segunda colunas da matriz _m4_. Imprimir a matriz depois.
m4<-m4[,-(1)]
print(m4)
m4<-m4[,-(1)]
print(m4)
# #6.
#- trocar a primeira com a segunda linha da matriz _m3_.
#    Imprimir a matriz depois. VocÃª deveria obter a nova matriz:
l1temp<-m3[1,]
print(l1temp)
m3<-m3[-(1),]
print(m3)
m3<-rbind(m3,l1temp)
print(m3)
#- trocar a segunda com a terceira coluna da matriz _m3_. Imprimir a matriz depois.
print(m3)
c2temp<-m3[,2]
m3<-m3[,-(2)]
print(m3)
m3<cbind(m3,c2temp)
print(c2temp)
print(m3)
m3<-cbind(m3,c2temp)
print(m3)
